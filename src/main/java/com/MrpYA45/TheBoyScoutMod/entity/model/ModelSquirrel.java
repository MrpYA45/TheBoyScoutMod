// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.MrpYA45.TheBoyScoutMod.entity.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelSquirrel extends ModelBase
{
  //fields
    ModelRenderer Cuerpo_Principal;
    ModelRenderer Cabeza;
    ModelRenderer Pie_1;
    ModelRenderer Pie_2;
    ModelRenderer Cola_Parte_2;
    ModelRenderer Cola_Parte_1;
    ModelRenderer Cala_Parte_3;
    ModelRenderer Oreja_1;
    ModelRenderer Oreja_2;
    ModelRenderer Brazo_1;
    ModelRenderer Brazo_2;
  
  public ModelSquirrel()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Cuerpo_Principal = new ModelRenderer(this, 14, 0);
      Cuerpo_Principal.addBox(0F, 0F, 0F, 2, 4, 2);
      Cuerpo_Principal.setRotationPoint(0F, 19F, 0F);
      Cuerpo_Principal.setTextureSize(64, 32);
      Cuerpo_Principal.mirror = true;
      setRotation(Cuerpo_Principal, 0F, 0F, 0F);
      Cabeza = new ModelRenderer(this, 0, 0);
      Cabeza.addBox(0F, 0F, 0F, 3, 3, 3);
      Cabeza.setRotationPoint(-0.5F, 16F, -0.5F);
      Cabeza.setTextureSize(64, 32);
      Cabeza.mirror = true;
      setRotation(Cabeza, 0F, 0F, 0F);
      Pie_1 = new ModelRenderer(this, 0, 29);
      Pie_1.addBox(0F, 0F, 0F, 1, 1, 2);
      Pie_1.setRotationPoint(0F, 23F, -0.5F);
      Pie_1.setTextureSize(64, 32);
      Pie_1.mirror = true;
      setRotation(Pie_1, 0F, 0F, 0F);
      Pie_2 = new ModelRenderer(this, 8, 29);
      Pie_2.addBox(0F, 0F, 0F, 1, 1, 2);
      Pie_2.setRotationPoint(1F, 23F, -0.5F);
      Pie_2.setTextureSize(64, 32);
      Pie_2.mirror = true;
      setRotation(Pie_2, 0F, 0F, 0F);
      Cola_Parte_2 = new ModelRenderer(this, 54, 0);
      Cola_Parte_2.addBox(0F, 0F, 0F, 1, 3, 1);
      Cola_Parte_2.setRotationPoint(0.5F, 19.8F, 2.5F);
      Cola_Parte_2.setTextureSize(64, 32);
      Cola_Parte_2.mirror = true;
      setRotation(Cola_Parte_2, 0F, 0F, 0F);
      Cola_Parte_1 = new ModelRenderer(this, 46, 0);
      Cola_Parte_1.addBox(0F, 0F, 0F, 1, 1, 2);
      Cola_Parte_1.setRotationPoint(0.5F, 22F, 1F);
      Cola_Parte_1.setTextureSize(64, 32);
      Cola_Parte_1.mirror = true;
      setRotation(Cola_Parte_1, 0F, 0F, 0F);
      Cala_Parte_3 = new ModelRenderer(this, 60, 0);
      Cala_Parte_3.addBox(0F, 0F, 0F, 1, 1, 1);
      Cala_Parte_3.setRotationPoint(0.5F, 19.5F, 3F);
      Cala_Parte_3.setTextureSize(64, 32);
      Cala_Parte_3.mirror = true;
      setRotation(Cala_Parte_3, 0F, 0F, 0F);
      Oreja_1 = new ModelRenderer(this, 0, 9);
      Oreja_1.addBox(0F, 0F, 0F, 1, 1, 1);
      Oreja_1.setRotationPoint(-0.5F, 15F, 1F);
      Oreja_1.setTextureSize(64, 32);
      Oreja_1.mirror = true;
      setRotation(Oreja_1, 0F, 0F, 0F);
      Oreja_2 = new ModelRenderer(this, 6, 9);
      Oreja_2.addBox(0F, 0F, 0F, 1, 1, 1);
      Oreja_2.setRotationPoint(1.5F, 15F, 1F);
      Oreja_2.setTextureSize(64, 32);
      Oreja_2.mirror = true;
      setRotation(Oreja_2, 0F, 0F, 0F);
      Brazo_1 = new ModelRenderer(this, 54, 28);
      Brazo_1.addBox(0F, 0F, 0F, 1, 3, 1);
      Brazo_1.setRotationPoint(-0.5F, 19.2F, 0.5F);
      Brazo_1.setTextureSize(64, 32);
      Brazo_1.mirror = true;
      setRotation(Brazo_1, 0F, 0F, 0F);
      Brazo_2 = new ModelRenderer(this, 60, 28);
      Brazo_2.addBox(0F, 0F, 0F, 1, 3, 1);
      Brazo_2.setRotationPoint(1.5F, 19.2F, 0.5F);
      Brazo_2.setTextureSize(64, 32);
      Brazo_2.mirror = true;
      setRotation(Brazo_2, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Cuerpo_Principal.render(f5);
    Cabeza.render(f5);
    Pie_1.render(f5);
    Pie_2.render(f5);
    Cola_Parte_2.render(f5);
    Cola_Parte_1.render(f5);
    Cala_Parte_3.render(f5);
    Oreja_1.render(f5);
    Oreja_2.render(f5);
    Brazo_1.render(f5);
    Brazo_2.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e)
  {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
		this.Pie_2.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.Pie_1.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.Brazo_1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * 2.0F * f1 * 0.5F;
		this.Brazo_2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
  }

}
